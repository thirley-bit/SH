{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nvar _regeneratorTransform = require(\"regenerator-transform\");\nvar _default = (0, _helperPluginUtils.declare)(({\n  types: t,\n  assertVersion\n}) => {\n  assertVersion(7);\n  return {\n    name: \"transform-regenerator\",\n    inherits: _regeneratorTransform.default,\n    visitor: {\n      MemberExpression(path) {\n        var _this$availableHelper;\n        if (!((_this$availableHelper = this.availableHelper) != null && _this$availableHelper.call(this, \"regeneratorRuntime\"))) {\n          return;\n        }\n        const obj = path.get(\"object\");\n        if (obj.isIdentifier({\n          name: \"regeneratorRuntime\"\n        })) {\n          const helper = this.addHelper(\"regeneratorRuntime\");\n          if (\n          t.isArrowFunctionExpression(helper)) {\n            obj.replaceWith(helper.body);\n            return;\n          }\n          obj.replaceWith(t.callExpression(helper, []));\n        }\n      }\n    }\n  };\n});\nexports.default = _default;\n\n//# sourceMappingURL=index.js.map\n"]}