{"version":3,"sources":["index.js","dist/index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["module.exports = require('./dist/index.js').default\n\nmodule.exports.default = module.exports\nmodule.exports.H5 = require('./dist/index.js').H5\n","\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar service = require('@tarojs/service');\nvar resolve = require('resolve');\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n[\"default\"] = e;\n  return Object.freeze(n);\n}\n\nvar resolve__namespace = /*#__PURE__*/_interopNamespace(resolve);\n\nfunction resolveSync(id, opts = {\n    basedir: __dirname\n}) {\n    return resolve__namespace.sync(id, opts);\n}\n\nconst compLibraryAlias = {\n    'vue': 'vue2',\n    'vue3': 'vue3'\n};\nconst PACKAGE_NAME = '@tarojs/plugin-platform-h5';\nclass H5 extends service.TaroPlatformWeb {\n    constructor(ctx, config) {\n        super(ctx, config);\n        this.platform = 'h5';\n        this.runtimePath = `${PACKAGE_NAME}/dist/runtime`;\n        this.setupTransaction.addWrapper({\n            close() {\n                this.modifyWebpackConfig();\n            }\n        });\n    }\n    get framework() {\n        return this.ctx.initialConfig.framework || 'react';\n    }\n    get useHtmlComponents() {\n        var _a;\n        return !!((_a = this.ctx.initialConfig.h5) === null || _a === void 0 ? void 0 : _a.useHtmlComponents);\n    }\n    get componentLibrary() {\n        if (this.useHtmlComponents && this.framework === 'react') {\n            return './runtime/components';\n        }\n        else {\n            return `@tarojs/components/lib/${compLibraryAlias[this.framework] || 'react'}`;\n        }\n    }\n    /**\n     * 修改 Webpack 配置\n     */\n    modifyWebpackConfig() {\n        this.ctx.modifyWebpackChain(({ chain }) => {\n            const rules = chain.module.rules;\n            const script = rules.get('script');\n            const babelLoader = script.uses.get('babelLoader');\n            babelLoader.set('options', Object.assign(Object.assign({}, babelLoader.get('options')), { plugins: [\n                    [require('babel-plugin-transform-taroapi'), {\n                            packageName: '@tarojs/taro',\n                            apis: require(resolveSync('./taroApis'))\n                        }]\n                ] }));\n            const alias = chain.resolve.alias;\n            // TODO 考虑集成到 taroComponentsPath 中，与小程序端对齐\n            alias.set('@tarojs/components$', require.resolve(this.componentLibrary));\n            alias.set('@tarojs/router$', require.resolve('@tarojs/router'));\n            alias.set('@tarojs/taro', require.resolve('./runtime/apis'));\n            chain.plugin('mainPlugin')\n                .tap(args => {\n                var _a;\n                (_a = args[0]).loaderMeta || (_a.loaderMeta = {\n                    extraImportForWeb: '',\n                    execBeforeCreateWebApp: ''\n                });\n                switch (this.framework) {\n                    case 'vue':\n                        args[0].loaderMeta.extraImportForWeb += `import { initVue2Components } from '@tarojs/components'\\n`;\n                        args[0].loaderMeta.execBeforeCreateWebApp += `initVue2Components()\\n`;\n                        break;\n                    case 'vue3':\n                        args[0].loaderMeta.extraImportForWeb += `import { initVue3Components } from '@tarojs/components'\\n`;\n                        args[0].loaderMeta.execBeforeCreateWebApp += `initVue3Components(component)\\n`;\n                        break;\n                    default:\n                        if (this.useHtmlComponents) {\n                            args[0].loaderMeta.extraImportForWeb += `import { PullDownRefresh } from '@tarojs/components'\\n`;\n                            args[0].loaderMeta.execBeforeCreateWebApp += `config.PullDownRefresh = PullDownRefresh\\n`;\n                        }\n                }\n                return args;\n            });\n            // Note: 本地调试 stencil 组件库时，如果启用 sourceMap 则需要相关配置\n            chain.module.rule('map')\n                .test(/\\.map$/).type('json');\n            // Note: 生产环境默认不加载 map 文件\n            if (process.env.NODE_ENV === 'production') {\n                alias.set('.map$', false);\n            }\n        });\n    }\n}\n\nvar index = (ctx) => {\n    ctx.registerPlatform({\n        name: 'h5',\n        useConfigName: 'h5',\n        fn({ config }) {\n            return tslib.__awaiter(this, void 0, void 0, function* () {\n                const program = new H5(ctx, config);\n                yield program.start();\n            });\n        }\n    });\n    ctx.modifyRunnerOpts(({ opts }) => {\n        opts.defineConstants || (opts.defineConstants = {});\n        opts.defineConstants.USE_HTML_COMPONENTS = JSON.stringify(!!opts.useHtmlComponents);\n        // TODO 为 postcss-html-transform 更新组件转换列表\n    });\n};\n\nexports.H5 = H5;\nexports[\"default\"] = index;\n//# sourceMappingURL=index.js.map\n"]}