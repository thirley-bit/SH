{"version":3,"sources":["index.js","helpers.js","get-runtime-path/index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AELA,AFMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\nvar _helperModuleImports = require(\"@babel/helper-module-imports\");\nvar _core = require(\"@babel/core\");\nvar _helpers = require(\"./helpers\");\nvar _getRuntimePath = require(\"./get-runtime-path\");\nvar _babelPluginPolyfillCorejs = require(\"babel-plugin-polyfill-corejs2\");\nvar _babelPluginPolyfillCorejs2 = require(\"babel-plugin-polyfill-corejs3\");\nvar _babelPluginPolyfillRegenerator = require(\"babel-plugin-polyfill-regenerator\");\nconst pluginCorejs2 = _babelPluginPolyfillCorejs.default || _babelPluginPolyfillCorejs;\nconst pluginCorejs3 = _babelPluginPolyfillCorejs2.default || _babelPluginPolyfillCorejs2;\nconst pluginRegenerator = _babelPluginPolyfillRegenerator.default || _babelPluginPolyfillRegenerator;\nconst pluginsCompat = \"#__secret_key__@babel/runtime__compatibility\";\nfunction supportsStaticESM(caller) {\n  return !!(caller != null && caller.supportsStaticESM);\n}\nvar _default = (0, _helperPluginUtils.declare)((api, options, dirname) => {\n  api.assertVersion(7);\n  const {\n    corejs,\n    helpers: useRuntimeHelpers = true,\n    regenerator: useRuntimeRegenerator = true,\n    useESModules = false,\n    version: runtimeVersion = \"7.0.0-beta.0\",\n    absoluteRuntime = false\n  } = options;\n  let proposals = false;\n  let rawVersion;\n  if (typeof corejs === \"object\" && corejs !== null) {\n    rawVersion = corejs.version;\n    proposals = Boolean(corejs.proposals);\n  } else {\n    rawVersion = corejs;\n  }\n  const corejsVersion = rawVersion ? Number(rawVersion) : false;\n  if (![false, 2, 3].includes(corejsVersion)) {\n    throw new Error(`The \\`core-js\\` version must be false, 2 or 3, but got ${JSON.stringify(rawVersion)}.`);\n  }\n  if (proposals && (!corejsVersion || corejsVersion < 3)) {\n    throw new Error(\"The 'proposals' option is only supported when using 'corejs: 3'\");\n  }\n  if (typeof useRuntimeRegenerator !== \"boolean\") {\n    throw new Error(\"The 'regenerator' option must be undefined, or a boolean.\");\n  }\n  if (typeof useRuntimeHelpers !== \"boolean\") {\n    throw new Error(\"The 'helpers' option must be undefined, or a boolean.\");\n  }\n  if (typeof useESModules !== \"boolean\" && useESModules !== \"auto\") {\n    throw new Error(\"The 'useESModules' option must be undefined, or a boolean, or 'auto'.\");\n  }\n  if (typeof absoluteRuntime !== \"boolean\" && typeof absoluteRuntime !== \"string\") {\n    throw new Error(\"The 'absoluteRuntime' option must be undefined, a boolean, or a string.\");\n  }\n  if (typeof runtimeVersion !== \"string\") {\n    throw new Error(`The 'version' option must be a version string.`);\n  }\n  {\n    const DUAL_MODE_RUNTIME = \"7.13.0\";\n    var supportsCJSDefault = (0, _helpers.hasMinVersion)(DUAL_MODE_RUNTIME, runtimeVersion);\n  }\n  function has(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n  }\n  if (has(options, \"useBuiltIns\")) {\n    if (options[\"useBuiltIns\"]) {\n      throw new Error(\"The 'useBuiltIns' option has been removed. The @babel/runtime \" + \"module now uses builtins by default.\");\n    } else {\n      throw new Error(\"The 'useBuiltIns' option has been removed. Use the 'corejs'\" + \"option to polyfill with `core-js` via @babel/runtime.\");\n    }\n  }\n  if (has(options, \"polyfill\")) {\n    if (options[\"polyfill\"] === false) {\n      throw new Error(\"The 'polyfill' option has been removed. The @babel/runtime \" + \"module now skips polyfilling by default.\");\n    } else {\n      throw new Error(\"The 'polyfill' option has been removed. Use the 'corejs'\" + \"option to polyfill with `core-js` via @babel/runtime.\");\n    }\n  }\n  if (has(options, \"moduleName\")) {\n    throw new Error(\"The 'moduleName' option has been removed. @babel/transform-runtime \" + \"no longer supports arbitrary runtimes. If you were using this to \" + \"set an absolute path for Babel's standard runtimes, please use the \" + \"'absoluteRuntime' option.\");\n  }\n  const esModules = useESModules === \"auto\" ? api.caller(supportsStaticESM) : useESModules;\n  const injectCoreJS2 = corejsVersion === 2;\n  const injectCoreJS3 = corejsVersion === 3;\n  const moduleName = injectCoreJS3 ? \"@babel/runtime-corejs3\" : injectCoreJS2 ? \"@babel/runtime-corejs2\" : \"@babel/runtime\";\n  const HEADER_HELPERS = [\"interopRequireWildcard\", \"interopRequireDefault\"];\n  const modulePath = (0, _getRuntimePath.default)(moduleName, dirname, absoluteRuntime);\n  function createCorejsPlugin(plugin, options, regeneratorPlugin) {\n    return (api, _, filename) => {\n      return Object.assign({}, plugin(api, options, filename), {\n        inherits: regeneratorPlugin\n      });\n    };\n  }\n  function createRegeneratorPlugin(options) {\n    if (!useRuntimeRegenerator) return undefined;\n    return (api, _, filename) => {\n      return pluginRegenerator(api, options, filename);\n    };\n  }\n  return {\n    name: \"transform-runtime\",\n    inherits: injectCoreJS2 ? createCorejsPlugin(pluginCorejs2, {\n      method: \"usage-pure\",\n      absoluteImports: absoluteRuntime ? modulePath : false,\n      [pluginsCompat]: {\n        runtimeVersion,\n        useBabelRuntime: modulePath,\n        ext: \"\"\n      }\n    }, createRegeneratorPlugin({\n      method: \"usage-pure\",\n      absoluteImports: absoluteRuntime ? modulePath : false,\n      [pluginsCompat]: {\n        useBabelRuntime: modulePath\n      }\n    })) : injectCoreJS3 ? createCorejsPlugin(pluginCorejs3, {\n      method: \"usage-pure\",\n      version: 3,\n      proposals,\n      absoluteImports: absoluteRuntime ? modulePath : false,\n      [pluginsCompat]: {\n        useBabelRuntime: modulePath,\n        ext: \"\"\n      }\n    }, createRegeneratorPlugin({\n      method: \"usage-pure\",\n      absoluteImports: absoluteRuntime ? modulePath : false,\n      [pluginsCompat]: {\n        useBabelRuntime: modulePath\n      }\n    })) : createRegeneratorPlugin({\n      method: \"usage-pure\",\n      absoluteImports: absoluteRuntime ? modulePath : false,\n      [pluginsCompat]: {\n        useBabelRuntime: modulePath\n      }\n    }),\n    pre(file) {\n      if (!useRuntimeHelpers) return;\n      file.set(\"helperGenerator\", name => {\n        if (!(file.availableHelper != null && file.availableHelper(name, runtimeVersion))) {\n          if (name === \"regeneratorRuntime\") {\n            return _core.types.arrowFunctionExpression([], _core.types.identifier(\"regeneratorRuntime\"));\n          }\n          return;\n        }\n        const isInteropHelper = HEADER_HELPERS.indexOf(name) !== -1;\n        const blockHoist = isInteropHelper && !(0, _helperModuleImports.isModule)(file.path) ? 4 : undefined;\n        const helpersDir = esModules && file.path.node.sourceType === \"module\" ? \"helpers/esm\" : \"helpers\";\n        let helperPath = `${modulePath}/${helpersDir}/${name}`;\n        if (absoluteRuntime) helperPath = (0, _getRuntimePath.resolveFSPath)(helperPath);\n        return addDefaultImport(helperPath, name, blockHoist, true);\n      });\n      const cache = new Map();\n      function addDefaultImport(source, nameHint, blockHoist, isHelper = false) {\n        const cacheKey = (0, _helperModuleImports.isModule)(file.path);\n        const key = `${source}:${nameHint}:${cacheKey || \"\"}`;\n        let cached = cache.get(key);\n        if (cached) {\n          cached = _core.types.cloneNode(cached);\n        } else {\n          cached = (0, _helperModuleImports.addDefault)(file.path, source, {\n            importedInterop: isHelper && supportsCJSDefault ? \"compiled\" : \"uncompiled\",\n            nameHint,\n            blockHoist\n          });\n          cache.set(key, cached);\n        }\n        return cached;\n      }\n    }\n  };\n});\nexports.default = _default;\n\n//# sourceMappingURL=index.js.map\n","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasMinVersion = hasMinVersion;\nvar _semver = require(\"semver\");\nfunction hasMinVersion(minVersion, runtimeVersion) {\n  if (!runtimeVersion) return true;\n  if (_semver.valid(runtimeVersion)) runtimeVersion = `^${runtimeVersion}`;\n  return !_semver.intersects(`<${minVersion}`, runtimeVersion) && !_semver.intersects(`>=8.0.0`, runtimeVersion);\n}\n\n//# sourceMappingURL=helpers.js.map\n","\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.resolveFSPath = resolveFSPath;\nvar _path = require(\"path\");\nvar _module = require(\"module\");\nfunction _default(moduleName, dirname, absoluteRuntime) {\n  if (absoluteRuntime === false) return moduleName;\n  return resolveAbsoluteRuntime(moduleName, _path.resolve(dirname, absoluteRuntime === true ? \".\" : absoluteRuntime));\n}\nfunction resolveAbsoluteRuntime(moduleName, dirname) {\n  try {\n    return _path.dirname((((v, w) => (v = v.split(\".\"), w = w.split(\".\"), +v[0] > +w[0] || v[0] == w[0] && +v[1] >= +w[1]))(process.versions.node, \"8.9\") ? require.resolve : (r, {\n      paths: [b]\n    }, M = require(\"module\")) => {\n      let f = M._findPath(r, M._nodeModulePaths(b).concat(b));\n      if (f) return f;\n      f = new Error(`Cannot resolve module '${r}'`);\n      f.code = \"MODULE_NOT_FOUND\";\n      throw f;\n    })(`${moduleName}/package.json`, {\n      paths: [dirname]\n    })).replace(/\\\\/g, \"/\");\n  } catch (err) {\n    if (err.code !== \"MODULE_NOT_FOUND\") throw err;\n    throw Object.assign(new Error(`Failed to resolve \"${moduleName}\" relative to \"${dirname}\"`), {\n      code: \"BABEL_RUNTIME_NOT_FOUND\",\n      runtime: moduleName,\n      dirname\n    });\n  }\n}\nfunction resolveFSPath(path) {\n  return require.resolve(path).replace(/\\\\/g, \"/\");\n}\n\n//# sourceMappingURL=index.js.map\n"]}