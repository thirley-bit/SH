{"version":3,"sources":["index.js","dist/index.js","dist/api-loader.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["module.exports = require('./dist/index.js').default\n\nmodule.exports.default = module.exports\n","\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helper = require('@tarojs/helper');\nvar shared = require('@tarojs/shared');\nvar lodash = require('lodash');\nvar acorn = require('acorn');\nvar walk = require('acorn-walk');\n\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\n\nvar acorn__namespace = /*#__PURE__*/_interopNamespaceDefault(acorn);\nvar walk__namespace = /*#__PURE__*/_interopNamespaceDefault(walk);\n\nfunction addConfig(source) {\n    const configsMap = {\n        enableShareAppMessage: ['onShareAppMessage', 'useShareAppMessage'],\n        enableShareTimeline: ['onShareTimeline', 'useShareTimeline']\n    };\n    const ast = acorn__namespace.parse(source, {\n        ecmaVersion: 'latest',\n        sourceType: 'module'\n    });\n    const additionConfig = {};\n    function check(name) {\n        Object.keys(configsMap).forEach(configName => {\n            const apis = configsMap[configName];\n            if (apis.includes(name)) {\n                additionConfig[configName] = true;\n            }\n        });\n    }\n    walk__namespace.simple(ast, {\n        FunctionExpression(node) {\n            if (!node.id || !node.id.name)\n                return;\n            check(node.id.name);\n        },\n        FunctionDeclaration(node) {\n            if (!node.id || !node.id.name)\n                return;\n            check(node.id.name);\n        },\n        CallExpression(node) {\n            const { callee } = node;\n            if (callee.type === 'Identifier') {\n                check(callee.name);\n            }\n            else if (callee.type === 'MemberExpression') {\n                if (callee.property.type === 'Identifier') {\n                    check(callee.property.name);\n                }\n                else if (callee.property.type === 'Literal') {\n                    check(callee.property.value);\n                }\n            }\n            node.arguments.forEach(item => {\n                if (item.type === 'Literal' && item.value) {\n                    check(item.value);\n                }\n            });\n        }\n    });\n    return additionConfig;\n}\nconst nervMeta = {\n    importFrameworkStatement: `\nimport Nerv from 'nervjs';\n`,\n    mockAppStatement: `\nclass App extends Nerv.Component {\nrender () {\n  return this.props.children\n}\n}\n`,\n    frameworkArgs: 'Nerv, Nerv, config',\n    importFrameworkName: 'Nerv'\n};\nfunction getLoaderMeta(framework) {\n    const loaderMeta = {\n        importFrameworkStatement: `\nimport * as React from 'react'\nimport ReactDOM from 'react-dom'\n`,\n        mockAppStatement: `\nclass App extends React.Component {\n  render () {\n    return this.props.children\n  }\n}\n`,\n        frameworkArgs: 'React, ReactDOM, config',\n        creator: 'createReactApp',\n        creatorLocation: '@tarojs/plugin-framework-react/dist/runtime',\n        importFrameworkName: 'React',\n        extraImportForWeb: '',\n        execBeforeCreateWebApp: '',\n        modifyConfig(config, source) {\n            Object.assign(config, addConfig(source));\n        }\n    };\n    if (framework === 'nerv') {\n        Object.assign(loaderMeta, nervMeta);\n    }\n    if (process.env.TARO_ENV === 'h5') {\n        if (framework === 'react') {\n            const react = require('react');\n            const majorVersion = Number((react.version || '18').split('.')[0]);\n            if (majorVersion >= 18) {\n                // Note: In react 18 or above, should using react-dom/client\n                loaderMeta.importFrameworkStatement = loaderMeta.importFrameworkStatement.replace('\\'react-dom\\'', '\\'react-dom/client\\'');\n                loaderMeta.extraImportForWeb += `import { findDOMNode, render, unstable_batchedUpdates } from 'react-dom'\\n`;\n                loaderMeta.execBeforeCreateWebApp += `Object.assign(ReactDOM, { findDOMNode, render, unstable_batchedUpdates })\\n`;\n            }\n        }\n    }\n    return loaderMeta;\n}\n\nfunction modifyH5WebpackChain(ctx, framework, chain) {\n    setLoader$1(framework, chain);\n    setPlugin(ctx, framework, chain);\n    chain.merge({\n        module: {\n            rule: {\n                'process-import-taro': {\n                    test: /taro-h5[\\\\/]dist[\\\\/]api[\\\\/]taro/,\n                    loader: require.resolve('./api-loader')\n                }\n            }\n        }\n    });\n}\nfunction setLoader$1(framework, chain) {\n    function customizer(object = '', sources = '') {\n        if ([object, sources].every(e => typeof e === 'string'))\n            return object + sources;\n    }\n    chain.plugin('mainPlugin')\n        .tap(args => {\n        args[0].loaderMeta = lodash.mergeWith(getLoaderMeta(framework), args[0].loaderMeta, customizer);\n        return args;\n    });\n}\nfunction setPlugin(ctx, framework, chain) {\n    var _a, _b;\n    const config = ctx.initialConfig;\n    const webpackConfig = chain.toConfig();\n    const isProd = webpackConfig.mode === 'production';\n    if (!isProd && ((_b = (_a = config.h5) === null || _a === void 0 ? void 0 : _a.devServer) === null || _b === void 0 ? void 0 : _b.hot) !== false) {\n        // 默认开启 fast-refresh\n        if (framework === 'react') {\n            chain\n                .plugin('fastRefreshPlugin')\n                .use(require('@pmmmwh/react-refresh-webpack-plugin'));\n        }\n        else if (framework === 'preact') {\n            chain\n                .plugin('hotModuleReplacementPlugin')\n                .use(require('webpack').HotModuleReplacementPlugin);\n            chain\n                .plugin('fastRefreshPlugin')\n                .use(require('@prefresh/webpack'));\n        }\n    }\n}\n\nfunction modifyMiniWebpackChain(ctx, framework, chain) {\n    setAlias$1(ctx, framework, chain);\n    setLoader(framework, chain);\n}\nfunction setAlias$1(ctx, framework, chain) {\n    var _a;\n    const config = ctx.initialConfig;\n    const alias = chain.resolve.alias;\n    if (framework === 'react') {\n        alias.set('react-dom$', '@tarojs/react');\n        const webpackConfig = chain.toConfig();\n        const isProd = webpackConfig.mode === 'production';\n        if (!isProd && ((_a = config.mini) === null || _a === void 0 ? void 0 : _a.debugReact) !== true) {\n            // 不是生产环境，且没有设置 debugReact，则使用压缩版本的 react 依赖，减少体积\n            alias.set('react-reconciler$', 'react-reconciler/cjs/react-reconciler.production.min.js');\n            alias.set('react$', 'react/cjs/react.production.min.js');\n            alias.set('react/jsx-runtime$', 'react/cjs/react-jsx-runtime.production.min.js');\n            // 在React18中，使用了exports字段约定了模块暴露路径，其中并未暴露 ./cjs/ 。这将使上面的alias在编译时报错。相当的tricky。\n            // Why writeJson？ prebundle will load package.json via readFile to check exports property.\n            const reactPkgPath = require.resolve('react/package.json', { paths: [process.cwd()] });\n            if (reactPkgPath) {\n                const reactPkg = require('react/package.json');\n                const reactVersion = (reactPkg.version || '');\n                if ((/^[~^]?18/).test(reactVersion) && reactPkg.exports) {\n                    reactPkg.exports = Object.assign(reactPkg.exports, {\n                        './cjs/': './cjs/'\n                    });\n                    helper.fs.writeJsonSync(reactPkgPath, reactPkg, { spaces: 2 });\n                }\n            }\n        }\n    }\n}\nfunction setLoader(framework, chain) {\n    chain.plugin('miniPlugin')\n        .tap(args => {\n        args[0].loaderMeta = getLoaderMeta(framework);\n        return args;\n    });\n}\n\nvar index = (ctx) => {\n    const { framework } = ctx.initialConfig;\n    if (framework !== 'react' && framework !== 'nerv' && framework !== 'preact')\n        return;\n    ctx.modifyWebpackChain(({ chain }) => {\n        // 通用\n        setAlias(framework, chain);\n        chain\n            .plugin('definePlugin')\n            .tap(args => {\n            const config = args[0];\n            config.__TARO_FRAMEWORK__ = `\"${framework}\"`;\n            return args;\n        });\n        if (process.env.TARO_ENV === 'h5') {\n            // H5\n            modifyH5WebpackChain(ctx, framework, chain);\n        }\n        else {\n            // 小程序\n            modifyMiniWebpackChain(ctx, framework, chain);\n        }\n    });\n    ctx.modifyRunnerOpts(({ opts }) => {\n        if (!(opts === null || opts === void 0 ? void 0 : opts.compiler))\n            return;\n        if (shared.isString(opts.compiler)) {\n            opts.compiler = {\n                type: opts.compiler\n            };\n        }\n        const { compiler } = opts;\n        if (compiler.type === 'webpack5') {\n            // 提供给 webpack5 依赖预编译收集器的第三方依赖\n            const deps = [\n                'react',\n                'react-dom',\n                'react/jsx-runtime',\n                '@tarojs/plugin-framework-react/dist/runtime'\n            ];\n            compiler.prebundle || (compiler.prebundle = {});\n            const prebundleOptions = compiler.prebundle;\n            prebundleOptions.include || (prebundleOptions.include = []);\n            prebundleOptions.include = prebundleOptions.include.concat(deps);\n            prebundleOptions.exclude || (prebundleOptions.exclude = []);\n            prebundleOptions.exclude.push(/mobx/); // 依赖会对 webpack 修改，默认排除\n            if (prebundleOptions.enable === false)\n                return;\n            const taroReactPlugin = {\n                name: 'taroReactPlugin',\n                setup(build) {\n                    build.onLoad({ filter: /taro-h5[\\\\/]dist[\\\\/]api[\\\\/]taro/ }, ({ path }) => {\n                        const content = helper.fs.readFileSync(path).toString();\n                        return {\n                            contents: require('./api-loader')(content)\n                        };\n                    });\n                }\n            };\n            prebundleOptions.esbuild || (prebundleOptions.esbuild = {});\n            const esbuildConfig = prebundleOptions.esbuild;\n            esbuildConfig.plugins || (esbuildConfig.plugins = []);\n            esbuildConfig.plugins.push(taroReactPlugin);\n        }\n    });\n};\nfunction setAlias(framework, chain) {\n    const alias = chain.resolve.alias;\n    switch (framework) {\n        case 'preact':\n            alias.set('react', 'preact/compat');\n            alias.set('react-dom/test-utils', 'preact/test-utils');\n            alias.set('react-dom', 'preact/compat');\n            alias.set('react/jsx-runtime', 'preact/jsx-runtime');\n            break;\n        case 'nerv':\n            alias.set('react$', 'nervjs');\n            alias.set('react-dom$', 'nervjs');\n            break;\n    }\n}\n\nexports.default = index;\n//# sourceMappingURL=index.js.map\n","\n\nfunction apiLoader (str) {\n    return `import {\n  useAddToFavorites,\n  useDidHide,\n  useDidShow,\n  useError,\n  useLaunch,\n  useLoad,\n  useOptionMenuClick,\n  usePageNotFound,\n  usePageScroll,\n  usePullDownRefresh,\n  usePullIntercept,\n  useReachBottom,\n  useReady,\n  useResize,\n  useRouter,\n  useSaveExitState,\n  useShareAppMessage,\n  useShareTimeline,\n  useTabItemTap,\n  useTitleClick,\n  useScope,\n  useUnload\n} from '@tarojs/plugin-framework-react/dist/runtime'\n${str}\n\ntaro.useAddToFavorites = useAddToFavorites\ntaro.useDidHide = useDidHide\ntaro.useDidShow = useDidShow\ntaro.useError = useError\ntaro.useLaunch = useLaunch\ntaro.useLoad = useLoad\ntaro.useOptionMenuClick = useOptionMenuClick\ntaro.usePageNotFound = usePageNotFound\ntaro.usePageScroll = usePageScroll\ntaro.usePullDownRefresh = usePullDownRefresh\ntaro.usePullIntercept = usePullIntercept\ntaro.useReachBottom = useReachBottom\ntaro.useReady = useReady\ntaro.useResize = useResize\ntaro.useRouter = useRouter\ntaro.useSaveExitState = useSaveExitState\ntaro.useShareAppMessage = useShareAppMessage\ntaro.useShareTimeline = useShareTimeline\ntaro.useTabItemTap = useTabItemTap\ntaro.useTitleClick = useTitleClick\ntaro.useScope = useScope\ntaro.useUnload = useUnload\n\nexport {\n  useAddToFavorites,\n  useDidHide,\n  useDidShow,\n  useError,\n  useLaunch,\n  useLoad,\n  useOptionMenuClick,\n  usePageNotFound,\n  usePageScroll,\n  usePullDownRefresh,\n  usePullIntercept,\n  useReachBottom,\n  useReady,\n  useResize,\n  useRouter,\n  useSaveExitState,\n  useShareAppMessage,\n  useShareTimeline,\n  useTabItemTap,\n  useTitleClick,\n  useScope,\n  useUnload\n}\n`;\n}\n\nmodule.exports = apiLoader;\n//# sourceMappingURL=api-loader.js.map\n"]}