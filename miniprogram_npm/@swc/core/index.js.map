{"version":3,"sources":["index.js","types.js","spack.js","binding.js","package.json"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,AENA;AFOA,AENA;AFOA,AENA;ACFA,AHSA,AENA;ACFA,AHSA,AENA;ACFA,AHSA,AENA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA,AFMA;ACFA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA,AIZA;ADIA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AGRA,AHSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_EXTENSIONS = exports.getBinaryMetadata = exports.__experimental_registerGlobalTraceConfig = exports.minifySync = exports.minify = exports.bundle = exports.transformFileSync = exports.transformFile = exports.transformSync = exports.transform = exports.printSync = exports.print = exports.parseFileSync = exports.parseFile = exports.parseSync = exports.parse = exports.Compiler = exports.plugins = exports.version = void 0;\nconst path_1 = require(\"path\");\n__exportStar(require(\"./types\"), exports);\nconst spack_1 = require(\"./spack\");\nconst assert = __importStar(require(\"assert\"));\n// Allow overrides to the location of the .node binding file\nconst bindingsOverride = process.env[\"SWC_BINARY_PATH\"];\n// `@swc/core` includes d.ts for the `@swc/wasm` to provide typed fallback bindings\n// todo: fix package.json scripts\nlet fallbackBindings;\nconst bindings = (() => {\n    let binding;\n    try {\n        binding = !!bindingsOverride ? require((0, path_1.resolve)(bindingsOverride)) : require('./binding');\n        // If native binding loaded successfully, it should return proper target triple constant.\n        const triple = binding.getTargetTriple();\n        assert.ok(triple, 'Failed to read target triple from native binary.');\n        return binding;\n    }\n    catch (_) {\n        // postinstall supposed to install `@swc/wasm` already\n        fallbackBindings = require('@swc/wasm');\n    }\n    finally {\n        return binding;\n    }\n})();\n/**\n * Version of the swc binding.\n */\nexports.version = require(\"./package.json\").version;\nfunction plugins(ps) {\n    return mod => {\n        let m = mod;\n        for (const p of ps) {\n            m = p(m);\n        }\n        return m;\n    };\n}\nexports.plugins = plugins;\nclass Compiler {\n    constructor() {\n        this.fallbackBindingsPluginWarningDisplayed = false;\n    }\n    minify(src, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (bindings) {\n                return bindings.minify(toBuffer(src), toBuffer(opts !== null && opts !== void 0 ? opts : {}));\n            }\n            else if (fallbackBindings) {\n                return fallbackBindings.minify(src, opts);\n            }\n            throw new Error('Bindings not found.');\n        });\n    }\n    minifySync(src, opts) {\n        if (bindings) {\n            return bindings.minifySync(toBuffer(src), toBuffer(opts !== null && opts !== void 0 ? opts : {}));\n        }\n        else if (fallbackBindings) {\n            return fallbackBindings.minifySync(src, opts);\n        }\n        throw new Error('Bindings not found.');\n    }\n    parse(src, options, filename) {\n        return __awaiter(this, void 0, void 0, function* () {\n            options = options || { syntax: \"ecmascript\" };\n            options.syntax = options.syntax || \"ecmascript\";\n            if (!bindings && !!fallbackBindings) {\n                throw new Error('Fallback bindings does not support this interface yet.');\n            }\n            else if (!bindings) {\n                throw new Error('Bindings not found.');\n            }\n            if (bindings) {\n                const res = yield bindings.parse(src, toBuffer(options), filename);\n                return JSON.parse(res);\n            }\n            else if (fallbackBindings) {\n                return fallbackBindings.parse(src, options);\n            }\n            throw new Error('Bindings not found.');\n        });\n    }\n    parseSync(src, options, filename) {\n        options = options || { syntax: \"ecmascript\" };\n        options.syntax = options.syntax || \"ecmascript\";\n        if (bindings) {\n            return JSON.parse(bindings.parseSync(src, toBuffer(options), filename));\n        }\n        else if (fallbackBindings) {\n            return fallbackBindings.parseSync(src, options);\n        }\n        throw new Error('Bindings not found.');\n    }\n    parseFile(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            options = options || { syntax: \"ecmascript\" };\n            options.syntax = options.syntax || \"ecmascript\";\n            if (!bindings && !!fallbackBindings) {\n                throw new Error('Fallback bindings does not support filesystem access.');\n            }\n            else if (!bindings) {\n                throw new Error('Bindings not found.');\n            }\n            const res = yield bindings.parseFile(path, toBuffer(options));\n            return JSON.parse(res);\n        });\n    }\n    parseFileSync(path, options) {\n        options = options || { syntax: \"ecmascript\" };\n        options.syntax = options.syntax || \"ecmascript\";\n        if (!bindings && !!fallbackBindings) {\n            throw new Error('Fallback bindings does not support filesystem access');\n        }\n        else if (!bindings) {\n            throw new Error('Bindings not found.');\n        }\n        return JSON.parse(bindings.parseFileSync(path, toBuffer(options)));\n    }\n    /**\n     * Note: this method should be invoked on the compiler instance used\n     *  for `parse()` / `parseSync()`.\n     */\n    print(m, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            options = options || {};\n            if (bindings) {\n                return bindings.print(JSON.stringify(m), toBuffer(options));\n            }\n            else if (fallbackBindings) {\n                return fallbackBindings.print(m, options);\n            }\n            throw new Error('Bindings not found.');\n        });\n    }\n    /**\n     * Note: this method should be invoked on the compiler instance used\n     *  for `parse()` / `parseSync()`.\n     */\n    printSync(m, options) {\n        options = options || {};\n        if (bindings) {\n            return bindings.printSync(JSON.stringify(m), toBuffer(options));\n        }\n        else if (fallbackBindings) {\n            return fallbackBindings.printSync(m, options);\n        }\n        throw new Error('Bindings not found.');\n    }\n    transform(src, options) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            const isModule = typeof src !== \"string\";\n            options = options || {};\n            if ((_a = options === null || options === void 0 ? void 0 : options.jsc) === null || _a === void 0 ? void 0 : _a.parser) {\n                options.jsc.parser.syntax = (_b = options.jsc.parser.syntax) !== null && _b !== void 0 ? _b : 'ecmascript';\n            }\n            const { plugin } = options, newOptions = __rest(options, [\"plugin\"]);\n            if (bindings) {\n                if (plugin) {\n                    const m = typeof src === \"string\"\n                        ? yield this.parse(src, (_c = options === null || options === void 0 ? void 0 : options.jsc) === null || _c === void 0 ? void 0 : _c.parser, options.filename)\n                        : src;\n                    return this.transform(plugin(m), newOptions);\n                }\n                return bindings.transform(isModule ? JSON.stringify(src) : src, isModule, toBuffer(newOptions));\n            }\n            else if (fallbackBindings) {\n                if (plugin && !this.fallbackBindingsPluginWarningDisplayed) {\n                    console.warn(`Fallback bindings does not support legacy plugins, it'll be ignored.`);\n                    this.fallbackBindingsPluginWarningDisplayed = true;\n                }\n                return fallbackBindings.transform(src, options);\n            }\n            throw new Error('Bindings not found.');\n        });\n    }\n    transformSync(src, options) {\n        var _a, _b, _c;\n        const isModule = typeof src !== \"string\";\n        options = options || {};\n        if ((_a = options === null || options === void 0 ? void 0 : options.jsc) === null || _a === void 0 ? void 0 : _a.parser) {\n            options.jsc.parser.syntax = (_b = options.jsc.parser.syntax) !== null && _b !== void 0 ? _b : 'ecmascript';\n        }\n        const { plugin } = options, newOptions = __rest(options, [\"plugin\"]);\n        if (bindings) {\n            if (plugin) {\n                const m = typeof src === \"string\" ? this.parseSync(src, (_c = options === null || options === void 0 ? void 0 : options.jsc) === null || _c === void 0 ? void 0 : _c.parser, options.filename) : src;\n                return this.transformSync(plugin(m), newOptions);\n            }\n            return bindings.transformSync(isModule ? JSON.stringify(src) : src, isModule, toBuffer(newOptions));\n        }\n        else if (fallbackBindings) {\n            if (plugin && !this.fallbackBindingsPluginWarningDisplayed) {\n                console.warn(`Fallback bindings does not support legacy plugins, it'll be ignored.`);\n                this.fallbackBindingsPluginWarningDisplayed = true;\n            }\n            return fallbackBindings.transformSync(isModule ? JSON.stringify(src) : src, options);\n        }\n        throw new Error(\"Bindings not found\");\n    }\n    transformFile(path, options) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!bindings && !!fallbackBindings) {\n                throw new Error('Fallback bindings does not support filesystem access.');\n            }\n            else if (!bindings) {\n                throw new Error('Bindings not found.');\n            }\n            options = options || {};\n            if ((_a = options === null || options === void 0 ? void 0 : options.jsc) === null || _a === void 0 ? void 0 : _a.parser) {\n                options.jsc.parser.syntax = (_b = options.jsc.parser.syntax) !== null && _b !== void 0 ? _b : 'ecmascript';\n            }\n            const { plugin } = options, newOptions = __rest(options, [\"plugin\"]);\n            newOptions.filename = path;\n            if (plugin) {\n                const m = yield this.parseFile(path, (_c = options === null || options === void 0 ? void 0 : options.jsc) === null || _c === void 0 ? void 0 : _c.parser);\n                return this.transform(plugin(m), newOptions);\n            }\n            return bindings.transformFile(path, false, toBuffer(newOptions));\n        });\n    }\n    transformFileSync(path, options) {\n        var _a, _b, _c;\n        if (!bindings && !!fallbackBindings) {\n            throw new Error('Fallback bindings does not support filesystem access.');\n        }\n        else if (!bindings) {\n            throw new Error('Bindings not found.');\n        }\n        options = options || {};\n        if ((_a = options === null || options === void 0 ? void 0 : options.jsc) === null || _a === void 0 ? void 0 : _a.parser) {\n            options.jsc.parser.syntax = (_b = options.jsc.parser.syntax) !== null && _b !== void 0 ? _b : 'ecmascript';\n        }\n        const { plugin } = options, newOptions = __rest(options, [\"plugin\"]);\n        newOptions.filename = path;\n        if (plugin) {\n            const m = this.parseFileSync(path, (_c = options === null || options === void 0 ? void 0 : options.jsc) === null || _c === void 0 ? void 0 : _c.parser);\n            return this.transformSync(plugin(m), newOptions);\n        }\n        return bindings.transformFileSync(path, /* isModule */ false, toBuffer(newOptions));\n    }\n    bundle(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!bindings && !!fallbackBindings) {\n                throw new Error('Fallback bindings does not support this interface yet.');\n            }\n            else if (!bindings) {\n                throw new Error('Bindings not found.');\n            }\n            const opts = yield (0, spack_1.compileBundleOptions)(options);\n            if (Array.isArray(opts)) {\n                const all = yield Promise.all(opts.map((opt) => __awaiter(this, void 0, void 0, function* () {\n                    return this.bundle(opt);\n                })));\n                let obj = {};\n                for (const o of all) {\n                    obj = Object.assign(Object.assign({}, obj), o);\n                }\n                return obj;\n            }\n            return bindings.bundle(toBuffer(Object.assign({}, opts)));\n        });\n    }\n}\nexports.Compiler = Compiler;\nconst compiler = new Compiler();\nfunction parse(src, options) {\n    return compiler.parse(src, options);\n}\nexports.parse = parse;\nfunction parseSync(src, options) {\n    return compiler.parseSync(src, options);\n}\nexports.parseSync = parseSync;\nfunction parseFile(path, options) {\n    return compiler.parseFile(path, options);\n}\nexports.parseFile = parseFile;\nfunction parseFileSync(path, options) {\n    return compiler.parseFileSync(path, options);\n}\nexports.parseFileSync = parseFileSync;\nfunction print(m, options) {\n    return compiler.print(m, options);\n}\nexports.print = print;\nfunction printSync(m, options) {\n    return compiler.printSync(m, options);\n}\nexports.printSync = printSync;\nfunction transform(src, options) {\n    return compiler.transform(src, options);\n}\nexports.transform = transform;\nfunction transformSync(src, options) {\n    return compiler.transformSync(src, options);\n}\nexports.transformSync = transformSync;\nfunction transformFile(path, options) {\n    return compiler.transformFile(path, options);\n}\nexports.transformFile = transformFile;\nfunction transformFileSync(path, options) {\n    return compiler.transformFileSync(path, options);\n}\nexports.transformFileSync = transformFileSync;\nfunction bundle(options) {\n    return compiler.bundle(options);\n}\nexports.bundle = bundle;\nfunction minify(src, opts) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return compiler.minify(src, opts);\n    });\n}\nexports.minify = minify;\nfunction minifySync(src, opts) {\n    return compiler.minifySync(src, opts);\n}\nexports.minifySync = minifySync;\n/**\n * Configure custom trace configuration runs for a process lifecycle.\n * Currently only chromium's trace event format is supported.\n * (https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU/preview)\n *\n * This should be called before calling any binding interfaces exported in `@swc/core`, such as\n * `transform*`, or `parse*` or anything. To avoid breaking changes, each binding fn internally\n * sets default trace subscriber if not set.\n *\n * Unlike other configuration, this does not belong to individual api surface using swcrc\n * or api's parameters (`transform(..., {trace})`). This is due to current tracing subscriber\n * can be configured only once for the global scope. Calling `registerGlobalTraceConfig` multiple\n * time won't cause error, subsequent calls will be ignored.\n *\n * As name implies currently this is experimental interface may change over time without semver\n * major breaking changes. Please provide feedbacks,\n * or bug report at https://github.com/swc-project/swc/discussions.\n */\nfunction __experimental_registerGlobalTraceConfig(traceConfig) {\n    // Do not raise error if binding doesn't exists - fallback binding will not support\n    // this ever.\n    if (bindings) {\n        if (traceConfig.type === 'traceEvent') {\n            bindings.initCustomTraceSubscriber(traceConfig.fileName);\n        }\n    }\n}\nexports.__experimental_registerGlobalTraceConfig = __experimental_registerGlobalTraceConfig;\n/**\n * @ignore\n *\n * Returns current binary's metadata to determine which binary is actually loaded.\n *\n * This is undocumented interface, does not guarantee stability across `@swc/core`'s semver\n * as internal representation may change anytime. Use it with caution.\n */\nfunction getBinaryMetadata() {\n    return {\n        target: bindings ? bindings === null || bindings === void 0 ? void 0 : bindings.getTargetTriple() : undefined\n    };\n}\nexports.getBinaryMetadata = getBinaryMetadata;\nexports.DEFAULT_EXTENSIONS = Object.freeze([\n    \".js\",\n    \".jsx\",\n    \".es6\",\n    \".es\",\n    \".mjs\",\n    \".ts\",\n    \".tsx\",\n    \".cts\",\n    \".mts\"\n]);\nfunction toBuffer(t) {\n    return Buffer.from(JSON.stringify(t));\n}\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.config = exports.compileBundleOptions = exports.isLocalFile = void 0;\nconst path = __importStar(require(\"path\"));\nexports.isLocalFile = /^\\.{0,2}\\//; // starts with '/' './' '../'\nfunction compileBundleOptions(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const f = config === undefined ? '.' : config;\n        try {\n            const filepath = typeof f === 'string' ? f : 'spack.config.js';\n            const fileModule = exports.isLocalFile.test(filepath) ? path.resolve(filepath) : filepath;\n            let configFromFile = require(fileModule);\n            if (configFromFile.default) {\n                configFromFile = configFromFile.default;\n            }\n            if (Array.isArray(configFromFile)) {\n                if (Array.isArray(f)) {\n                    return [...configFromFile, ...f];\n                }\n                if (typeof f !== 'string') {\n                    configFromFile.push(f);\n                }\n                return configFromFile;\n            }\n            return Object.assign(Object.assign({}, configFromFile), (typeof config === 'string') ? {} : config);\n        }\n        catch (e) {\n            if (typeof f === 'string') {\n                throw new Error(`Error occurred while loading config file at ${config}: ${e}`);\n            }\n            return f;\n        }\n    });\n}\nexports.compileBundleOptions = compileBundleOptions;\n/**\n * Usage: In `spack.config.js` / `spack.config.ts`, you can utilize type annotations (to get autocompletions) like\n *\n * ```ts\n * import { config } from '@swc/core/spack';\n *\n * export default config({\n *      name: 'web',\n * });\n * ```\n *\n *\n *\n */\nfunction config(c) {\n    return c;\n}\nexports.config = config;\n","\nconst { existsSync, readFileSync } = require('fs');\nconst { join } = require('path');\nconst { platform, arch } = process;\nlet nativeBinding = null;\nlet localFileExisted = false;\nlet loadError = null;\nfunction isMusl() {\n    // For Node 10\n    if (!process.report || typeof process.report.getReport !== 'function') {\n        try {\n            const lddPath = require('child_process').execSync('which ldd').toString().trim();\n            return readFileSync(lddPath, 'utf8').includes('musl');\n        }\n        catch (e) {\n            return true;\n        }\n    }\n    else {\n        const { glibcVersionRuntime } = process.report.getReport().header;\n        return !glibcVersionRuntime;\n    }\n}\nswitch (platform) {\n    case 'android':\n        switch (arch) {\n            case 'arm64':\n                localFileExisted = existsSync(join(__dirname, 'swc.android-arm64.node'));\n                try {\n                    if (localFileExisted) {\n                        nativeBinding = require('./swc.android-arm64.node');\n                    }\n                    else {\n                        nativeBinding = require('@swc/core-android-arm64');\n                    }\n                }\n                catch (e) {\n                    loadError = e;\n                }\n                break;\n            case 'arm':\n                localFileExisted = existsSync(join(__dirname, 'swc.android-arm-eabi.node'));\n                try {\n                    if (localFileExisted) {\n                        nativeBinding = require('./swc.android-arm-eabi.node');\n                    }\n                    else {\n                        nativeBinding = require('@swc/core-android-arm-eabi');\n                    }\n                }\n                catch (e) {\n                    loadError = e;\n                }\n                break;\n            default:\n                throw new Error(`Unsupported architecture on Android ${arch}`);\n        }\n        break;\n    case 'win32':\n        switch (arch) {\n            case 'x64':\n                localFileExisted = existsSync(join(__dirname, 'swc.win32-x64-msvc.node'));\n                try {\n                    if (localFileExisted) {\n                        nativeBinding = require('./swc.win32-x64-msvc.node');\n                    }\n                    else {\n                        nativeBinding = require('@swc/core-win32-x64-msvc');\n                    }\n                }\n                catch (e) {\n                    loadError = e;\n                }\n                break;\n            case 'ia32':\n                localFileExisted = existsSync(join(__dirname, 'swc.win32-ia32-msvc.node'));\n                try {\n                    if (localFileExisted) {\n                        nativeBinding = require('./swc.win32-ia32-msvc.node');\n                    }\n                    else {\n                        nativeBinding = require('@swc/core-win32-ia32-msvc');\n                    }\n                }\n                catch (e) {\n                    loadError = e;\n                }\n                break;\n            case 'arm64':\n                localFileExisted = existsSync(join(__dirname, 'swc.win32-arm64-msvc.node'));\n                try {\n                    if (localFileExisted) {\n                        nativeBinding = require('./swc.win32-arm64-msvc.node');\n                    }\n                    else {\n                        nativeBinding = require('@swc/core-win32-arm64-msvc');\n                    }\n                }\n                catch (e) {\n                    loadError = e;\n                }\n                break;\n            default:\n                throw new Error(`Unsupported architecture on Windows: ${arch}`);\n        }\n        break;\n    case 'darwin':\n        switch (arch) {\n            case 'x64':\n                localFileExisted = existsSync(join(__dirname, 'swc.darwin-x64.node'));\n                try {\n                    if (localFileExisted) {\n                        nativeBinding = require('./swc.darwin-x64.node');\n                    }\n                    else {\n                        nativeBinding = require('@swc/core-darwin-x64');\n                    }\n                }\n                catch (e) {\n                    loadError = e;\n                }\n                break;\n            case 'arm64':\n                localFileExisted = existsSync(join(__dirname, 'swc.darwin-arm64.node'));\n                try {\n                    if (localFileExisted) {\n                        nativeBinding = require('./swc.darwin-arm64.node');\n                    }\n                    else {\n                        nativeBinding = require('@swc/core-darwin-arm64');\n                    }\n                }\n                catch (e) {\n                    loadError = e;\n                }\n                break;\n            default:\n                throw new Error(`Unsupported architecture on macOS: ${arch}`);\n        }\n        break;\n    case 'freebsd':\n        if (arch !== 'x64') {\n            throw new Error(`Unsupported architecture on FreeBSD: ${arch}`);\n        }\n        localFileExisted = existsSync(join(__dirname, 'swc.freebsd-x64.node'));\n        try {\n            if (localFileExisted) {\n                nativeBinding = require('./swc.freebsd-x64.node');\n            }\n            else {\n                nativeBinding = require('@swc/core-freebsd-x64');\n            }\n        }\n        catch (e) {\n            loadError = e;\n        }\n        break;\n    case 'linux':\n        switch (arch) {\n            case 'x64':\n                if (isMusl()) {\n                    localFileExisted = existsSync(join(__dirname, 'swc.linux-x64-musl.node'));\n                    try {\n                        if (localFileExisted) {\n                            nativeBinding = require('./swc.linux-x64-musl.node');\n                        }\n                        else {\n                            nativeBinding = require('@swc/core-linux-x64-musl');\n                        }\n                    }\n                    catch (e) {\n                        loadError = e;\n                    }\n                }\n                else {\n                    localFileExisted = existsSync(join(__dirname, 'swc.linux-x64-gnu.node'));\n                    try {\n                        if (localFileExisted) {\n                            nativeBinding = require('./swc.linux-x64-gnu.node');\n                        }\n                        else {\n                            nativeBinding = require('@swc/core-linux-x64-gnu');\n                        }\n                    }\n                    catch (e) {\n                        loadError = e;\n                    }\n                }\n                break;\n            case 'arm64':\n                if (isMusl()) {\n                    localFileExisted = existsSync(join(__dirname, 'swc.linux-arm64-musl.node'));\n                    try {\n                        if (localFileExisted) {\n                            nativeBinding = require('./swc.linux-arm64-musl.node');\n                        }\n                        else {\n                            nativeBinding = require('@swc/core-linux-arm64-musl');\n                        }\n                    }\n                    catch (e) {\n                        loadError = e;\n                    }\n                }\n                else {\n                    localFileExisted = existsSync(join(__dirname, 'swc.linux-arm64-gnu.node'));\n                    try {\n                        if (localFileExisted) {\n                            nativeBinding = require('./swc.linux-arm64-gnu.node');\n                        }\n                        else {\n                            nativeBinding = require('@swc/core-linux-arm64-gnu');\n                        }\n                    }\n                    catch (e) {\n                        loadError = e;\n                    }\n                }\n                break;\n            case 'arm':\n                localFileExisted = existsSync(join(__dirname, 'swc.linux-arm-gnueabihf.node'));\n                try {\n                    if (localFileExisted) {\n                        nativeBinding = require('./swc.linux-arm-gnueabihf.node');\n                    }\n                    else {\n                        nativeBinding = require('@swc/core-linux-arm-gnueabihf');\n                    }\n                }\n                catch (e) {\n                    loadError = e;\n                }\n                break;\n            default:\n                throw new Error(`Unsupported architecture on Linux: ${arch}`);\n        }\n        break;\n    default:\n        throw new Error(`Unsupported OS: ${platform}, architecture: ${arch}`);\n}\nif (!nativeBinding) {\n    if (loadError) {\n        throw loadError;\n    }\n    throw new Error(`Failed to load native binding`);\n}\nconst { bundle, minify, minifySync, parse, parseSync, parseFileSync, parseFile, print, printSync, transform, transformSync, transformFile, transformFileSync, getTargetTriple, initCustomTraceSubscriber, Compiler } = nativeBinding;\nmodule.exports.bundle = bundle;\nmodule.exports.minify = minify;\nmodule.exports.minifySync = minifySync;\nmodule.exports.parse = parse;\nmodule.exports.parseSync = parseSync;\nmodule.exports.parseFileSync = parseFileSync;\nmodule.exports.parseFile = parseFile;\nmodule.exports.print = print;\nmodule.exports.printSync = printSync;\nmodule.exports.transform = transform;\nmodule.exports.transformSync = transformSync;\nmodule.exports.transformFile = transformFile;\nmodule.exports.transformFileSync = transformFileSync;\nmodule.exports.getTargetTriple = getTargetTriple;\nmodule.exports.initCustomTraceSubscriber = initCustomTraceSubscriber;\nmodule.exports.Compiler = Compiler;\n","module.exports = {\n  \"_from\": \"@swc/core@^1.3.23\",\n  \"_id\": \"@swc/core@1.3.42\",\n  \"_inBundle\": false,\n  \"_integrity\": \"sha512-nVFUd5+7tGniM2cT3LXaqnu3735Cu4az8A9gAKK+8sdpASI52SWuqfDBmjFCK9xG90MiVDVp2PTZr0BWqCIzpw==\",\n  \"_location\": \"/@swc/core\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"type\": \"range\",\n    \"registry\": true,\n    \"raw\": \"@swc/core@^1.3.23\",\n    \"name\": \"@swc/core\",\n    \"escapedName\": \"@swc%2fcore\",\n    \"scope\": \"@swc\",\n    \"rawSpec\": \"^1.3.23\",\n    \"saveSpec\": null,\n    \"fetchSpec\": \"^1.3.23\"\n  },\n  \"_requiredBy\": [\n    \"/@tarojs/helper\",\n    \"/@tarojs/webpack5-prebundle\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/@swc/core/-/core-1.3.42.tgz\",\n  \"_shasum\": \"7067c4fd9a02536f9ca7b54ed8ebc45e2df810cf\",\n  \"_spec\": \"@swc/core@^1.3.23\",\n  \"_where\": \"E:\\\\project\\\\school1\\\\SH\\\\node_modules\\\\@tarojs\\\\helper\",\n  \"author\": {\n    \"name\": \"강동윤\",\n    \"email\": \"kdy1997.dev@gmail.com\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/swc-project/swc/issues\"\n  },\n  \"bundleDependencies\": false,\n  \"dependencies\": {\n    \"@swc/core-darwin-arm64\": \"1.3.42\",\n    \"@swc/core-darwin-x64\": \"1.3.42\",\n    \"@swc/core-linux-arm-gnueabihf\": \"1.3.42\",\n    \"@swc/core-linux-arm64-gnu\": \"1.3.42\",\n    \"@swc/core-linux-arm64-musl\": \"1.3.42\",\n    \"@swc/core-linux-x64-gnu\": \"1.3.42\",\n    \"@swc/core-linux-x64-musl\": \"1.3.42\",\n    \"@swc/core-win32-arm64-msvc\": \"1.3.42\",\n    \"@swc/core-win32-ia32-msvc\": \"1.3.42\",\n    \"@swc/core-win32-x64-msvc\": \"1.3.42\"\n  },\n  \"deprecated\": false,\n  \"description\": \"Super-fast alternative for babel\",\n  \"devDependencies\": {\n    \"@babel/compat-data\": \"^7.17.0\",\n    \"@babel/core\": \"^7.13.16\",\n    \"@babel/generator\": \"^7.18.13\",\n    \"@babel/plugin-proposal-class-properties\": \"^7.13.0\",\n    \"@babel/plugin-proposal-decorators\": \"^7.13.15\",\n    \"@babel/plugin-proposal-object-rest-spread\": \"^7.13.8\",\n    \"@babel/preset-env\": \"^7.13.15\",\n    \"@babel/preset-react\": \"^7.13.13\",\n    \"@babel/preset-typescript\": \"^7.13.0\",\n    \"@babel/types\": \"^7.14.0\",\n    \"@napi-rs/cli\": \"^2.14.1\",\n    \"@swc/core\": \"=1.2.220\",\n    \"@swc/helpers\": \"^0.4.2\",\n    \"@swc/plugin-jest\": \"1.5.25\",\n    \"@taplo/cli\": \"^0.3.2\",\n    \"@types/jest\": \"^28.1.4\",\n    \"@types/node\": \"^14.14.41\",\n    \"@types/terser\": \"^3.12.0\",\n    \"acorn\": \"^8.6.0\",\n    \"acorn-jsx\": \"^5.3.2\",\n    \"axios\": \"^0.21.1\",\n    \"babel-plugin-transform-node-env-inline\": \"^0.4.3\",\n    \"benchmark\": \"^2.1.4\",\n    \"bootstrap\": \"^5.2.1\",\n    \"class-validator\": \"^0.13.1\",\n    \"core-js\": \"^2.6.11\",\n    \"core-js-compat\": \"^3.21.1\",\n    \"cross-env\": \"^7.0.3\",\n    \"cspell\": \"^5.12.3\",\n    \"expect\": \"^27.4.2\",\n    \"glob\": \"^8.0.3\",\n    \"husky\": \"^7.0.2\",\n    \"jest\": \"^28.1.2\",\n    \"js-beautify\": \"^1.14.3\",\n    \"lint-staged\": \"^12.3.6\",\n    \"lodash\": \"^4.17.21\",\n    \"mocha\": \"^9.1.3\",\n    \"npm-run-all\": \"^4.1.5\",\n    \"prettier\": \"^2.6.2\",\n    \"progress\": \"^2.0.3\",\n    \"prop-types\": \"^15.7.2\",\n    \"react\": \"^17.0.2\",\n    \"reflect-metadata\": \"^0.1.13\",\n    \"regenerator-runtime\": \"^0.13.9\",\n    \"source-map\": \"^0.7.3\",\n    \"source-map-support\": \"^0.5.19\",\n    \"sourcemap-validator\": \"^2.1.0\",\n    \"swc-plugin-coverage-instrument\": \"^0.0.12\",\n    \"terser\": \"^5.7.1\",\n    \"ts-node\": \"^10.5.0\",\n    \"typescript\": \"^4.5.2\"\n  },\n  \"engines\": {\n    \"node\": \">=10\"\n  },\n  \"files\": [\n    \"CHANGELOG.md\",\n    \"Visitor.d.ts\",\n    \"index.d.ts\",\n    \"spack.js\",\n    \"util.d.ts\",\n    \"LICENSE\",\n    \"Visitor.js\",\n    \"binding.d.ts\",\n    \"index.js\",\n    \"types.d.ts\",\n    \"util.js\",\n    \"README.md\",\n    \"binding.js\",\n    \"package.json\",\n    \"spack.d.ts\",\n    \"types.js\",\n    \"postinstall.js\",\n    \"bindings/binding_core_wasm/pkg/binding_core_wasm.d.ts\"\n  ],\n  \"funding\": {\n    \"type\": \"opencollective\",\n    \"url\": \"https://opencollective.com/swc\"\n  },\n  \"homepage\": \"https://swc.rs\",\n  \"keywords\": [\n    \"swc\",\n    \"swcpack\",\n    \"babel\",\n    \"typescript\",\n    \"rust\",\n    \"webpack\",\n    \"tsc\"\n  ],\n  \"license\": \"Apache-2.0\",\n  \"lint-staged\": {\n    \"*.toml\": [\n      \"taplo format\"\n    ],\n    \"*.rs\": [\n      \"rustfmt --\"\n    ],\n    \"!(**/tests/**/*)*.js\": [\n      \"prettier --write\"\n    ],\n    \"!(**/tests/**/*)*.ts\": [\n      \"prettier --write\"\n    ],\n    \"!(**/tests/**/*)*.jsx\": [\n      \"prettier --write\"\n    ],\n    \"!(**/tests/**/*)*.tsx\": [\n      \"prettier --write\"\n    ]\n  },\n  \"main\": \"./index.js\",\n  \"name\": \"@swc/core\",\n  \"napi\": {\n    \"name\": \"swc\",\n    \"triples\": {\n      \"defaults\": true,\n      \"additional\": [\n        \"x86_64-unknown-linux-musl\",\n        \"i686-pc-windows-msvc\",\n        \"aarch64-unknown-linux-gnu\",\n        \"armv7-unknown-linux-gnueabihf\",\n        \"aarch64-apple-darwin\",\n        \"aarch64-unknown-linux-musl\",\n        \"aarch64-pc-windows-msvc\"\n      ]\n    }\n  },\n  \"optionalDependencies\": {\n    \"@swc/core-darwin-arm64\": \"1.3.42\",\n    \"@swc/core-darwin-x64\": \"1.3.42\",\n    \"@swc/core-linux-arm-gnueabihf\": \"1.3.42\",\n    \"@swc/core-linux-arm64-gnu\": \"1.3.42\",\n    \"@swc/core-linux-arm64-musl\": \"1.3.42\",\n    \"@swc/core-linux-x64-gnu\": \"1.3.42\",\n    \"@swc/core-linux-x64-musl\": \"1.3.42\",\n    \"@swc/core-win32-arm64-msvc\": \"1.3.42\",\n    \"@swc/core-win32-ia32-msvc\": \"1.3.42\",\n    \"@swc/core-win32-x64-msvc\": \"1.3.42\"\n  },\n  \"packageManager\": \"yarn@3.3.0\",\n  \"publishConfig\": {\n    \"registry\": \"https://registry.npmjs.org/\",\n    \"access\": \"public\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/swc-project/swc.git\"\n  },\n  \"scripts\": {\n    \"artifacts\": \"napi artifacts --dist scripts/npm\",\n    \"build\": \"tsc -d && napi build --platform --cargo-name binding_core_node --js ./node-swc/src/binding.js --dts ./node-swc/src/binding.d.ts --cargo-cwd ./bindings -p binding_core_node --release\",\n    \"build:bytecheck\": \"tsc -d && napi build --platform --cargo-name binding_core_node --js ./node-swc/src/binding.js --dts ./node-swc/src/binding.d.ts --cargo-cwd ./bindings --features swc_v1,plugin_bytecheck -p binding_core_node --cargo-flags=--no-default-features --release\",\n    \"build:dev\": \"tsc -d && napi build --platform --cargo-name binding_core_node --js ./node-swc/src/binding.js --dts ./node-swc/src/binding.d.ts --cargo-cwd ./bindings -p binding_core_node\",\n    \"build:ts\": \"tsc -d\",\n    \"build:wasm\": \"npm-run-all \\\"pack -- build ./bindings/binding_core_wasm --scope swc {1} -t {2} --features plugin\\\" --\",\n    \"changelog\": \"git cliff --output CHANGELOG.md\",\n    \"pack\": \"wasm-pack\",\n    \"postinstall\": \"node postinstall.js\",\n    \"prepare\": \"husky install && git config feature.manyFiles true && node ./crates/swc_ecma_preset_env/scripts/copy-data.js\",\n    \"prepublishOnly\": \"tsc -d && napi prepublish -p scripts/npm --tagstyle npm\",\n    \"test\": \"cross-env NODE_OPTIONS='--experimental-vm-modules' jest --config ./node-swc/jest.config.js\",\n    \"version\": \"napi version -p scripts/npm\"\n  },\n  \"types\": \"./index.d.ts\",\n  \"version\": \"1.3.42\"\n}\n"]}