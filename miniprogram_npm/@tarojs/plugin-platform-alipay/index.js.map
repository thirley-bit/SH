{"version":3,"sources":["index.js","dist/index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["module.exports = require('./dist/index.js').default\n\nmodule.exports.default = module.exports\nmodule.exports.Alipay = require('./dist/index.js').Alipay\n","\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@tarojs/shared');\nvar service = require('@tarojs/service');\nvar template = require('@tarojs/shared/dist/template');\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nconst components = {\n    // ======== 调整属性 ========\n    View: {\n        'disable-scroll': 'false',\n        hidden: 'false',\n        bindAppear: '',\n        bindDisappear: '',\n        bindFirstAppear: ''\n    },\n    Text: {\n        'number-of-lines': ''\n    },\n    Map: {\n        skew: '0',\n        rotate: '0',\n        polygons: '[]',\n        'include-padding': '',\n        'ground-overlays': '[]',\n        'tile-overlay': '',\n        'custom-map-style': '',\n        panels: '[]',\n        setting: '{}',\n        optimize: 'false',\n        'show-compass': 'false',\n        'show-scale': 'false',\n        'enable-overlooking': 'false',\n        'enable-zoom': 'true',\n        'enable-scroll': 'true',\n        'enable-rotate': 'false',\n        'enable-traffic': 'false',\n        'enable-poi': 'true',\n        'enable-building': 'true',\n        'enable-satellite': 'false',\n        bindRegionChange: '',\n        bindPanelTap: '',\n        bindInitComplete: ''\n    },\n    Button: {\n        scope: '',\n        'public-id': '',\n        bindGetAuthorize: '',\n        bindError: '',\n        bindGetUserInfo: '',\n        bindGetPhoneNumber: ''\n    },\n    Checkbox: {\n        bindChange: ''\n    },\n    Input: {\n        'always-system': 'false',\n        'random-number': 'false',\n        controlled: 'false',\n        enableNative: 'true',\n        name: ''\n    },\n    Slider: {\n        'track-size': '4',\n        'handle-size': '22',\n        'handle-color': shared.singleQuote('#ffffff')\n    },\n    Switch: {\n        controlled: 'false'\n    },\n    Textarea: {\n        'show-count': 'true',\n        controlled: 'false',\n        enableNative: 'false'\n    },\n    MovableView: {\n        bindChangeEnd: ''\n    },\n    ScrollView: {\n        'scroll-animation-duration': '',\n        'trap-scroll': 'false'\n    },\n    Swiper: {\n        'active-class': '',\n        'changing-class': '',\n        acceleration: 'false',\n        'disable-programmatic-animation': 'false',\n        'disable-touch': 'false',\n        bindAnimationEnd: ''\n    },\n    Image: {\n        'default-source': ''\n    },\n    Camera: {\n        mode: shared.singleQuote('normal'),\n        'output-dimension': shared.singleQuote('720P'),\n        'frame-size': shared.singleQuote('medium'),\n        bindScanCode: '',\n        bindReady: '',\n    },\n    Canvas: {\n        type: '',\n        width: shared.singleQuote('300px'),\n        height: shared.singleQuote('225px'),\n        bindReady: ''\n    },\n    Video: {\n        'poster-size': shared.singleQuote('contain'),\n        'mobilenet-hint-type': '1',\n        enableNative: 'true',\n        bindLoading: '',\n        bindUserAction: '',\n        bindStop: '',\n        bindRenderStart: ''\n    },\n    // ======== 额外组件 ========\n    Lottie: {\n        autoplay: 'false',\n        path: '',\n        speed: '1.0',\n        'repeat-count': '0',\n        'auto-reverse': 'false',\n        'assets-path': '',\n        placeholder: '',\n        djangoId: '',\n        md5: '',\n        optimize: 'false',\n        bindDataReady: '',\n        bindDataFailed: '',\n        bindAnimationStart: '',\n        bindAnimationEnd: '',\n        bindAnimationRepeat: '',\n        bindAnimationCancel: '',\n        bindDataLoadReady: ''\n    },\n    Lifestyle: {\n        'public-id': '',\n        memo: '',\n        bindFollow: ''\n    },\n    LifeFollow: {\n        sceneId: '',\n        checkFollow: '',\n        bindCheckFollow: '',\n        bindClose: ''\n    },\n    ContactButton: {\n        'tnt-inst-id': '',\n        scene: '',\n        size: '25',\n        color: shared.singleQuote('#00A3FF'),\n        icon: '',\n        'alipay-card-no': '',\n        'ext-info': ''\n    },\n    ArCamera: {\n        devicePosition: shared.singleQuote('back'),\n        marker: '',\n        mode: shared.singleQuote('imageTracking'),\n        useCapturedImage: 'false',\n        bindInit: '',\n        bindStop: '',\n        bindError: '',\n        bindARFrame: ''\n    },\n    PageContainer: {\n        show: 'false',\n        duration: '300',\n        'z-index': '100',\n        overlay: 'true',\n        position: shared.singleQuote('bottom'),\n        round: 'false',\n        'close-on-slide-down': 'false',\n        'overlay-style': '',\n        'custom-style': '',\n        bindBeforeEnter: '',\n        bindEnter: '',\n        bindEnterCancelled: '',\n        bindAfterEnter: '',\n        bindBeforeLeave: '',\n        bindLeave: '',\n        bindLeaveCancelled: '',\n        bindAfterLeave: '',\n        bindClickOverlay: '',\n    },\n    ShareElement: {\n        name: '',\n        transform: 'false',\n        duration: '300',\n        'easing-function': shared.singleQuote('ease-out'),\n    },\n};\n\nclass Template extends template.RecursiveTemplate {\n    constructor() {\n        super(...arguments);\n        this.exportExpr = 'export default';\n        this.supportXS = true;\n        this.Adapter = {\n            if: 'a:if',\n            else: 'a:else',\n            elseif: 'a:elif',\n            for: 'a:for',\n            forItem: 'a:for-item',\n            forIndex: 'a:for-index',\n            key: 'a:key',\n            xs: 'sjs',\n            type: 'alipay'\n        };\n        this.modifyLoopBody = (child, nodeName) => {\n            if (nodeName === 'picker-view') {\n                return `<picker-view-column class=\"{{item.cl}}\" style=\"{{item.st}}\">\n        <view a:for=\"{{item.cn}}\" a:key=\"sid\">\n          ${child}\n        </view>\n      </picker-view-column>`;\n            }\n            return child;\n        };\n        this.modifyLoopContainer = (children, nodeName) => {\n            if (nodeName === 'picker') {\n                return `\n  <view>${children}</view>\n  `;\n            }\n            if (nodeName === 'swiper') {\n                return `\n    <block a:for=\"{{xs.f(i.cn)}}\" a:key=\"sid\">\n      <swiper-item class=\"{{item.cl}}\" style=\"{{item.st}}\" id=\"{{item.uid||item.sid}}\" data-sid=\"{{item.sid}}\">\n        <block a:for=\"{{item.cn}}\" a:key=\"sid\">\n          <template is=\"{{xs.e(0)}}\" data=\"{{i:item}}\" />\n        </block>\n      </swiper-item>\n    </block>\n  `;\n            }\n            return children;\n        };\n        this.modifyTemplateResult = (res, nodeName) => {\n            if (nodeName === 'picker-view-column' || nodeName === 'swiper-item')\n                return '';\n            return res;\n        };\n        this.modifyThirdPartyLoopBody = () => {\n            // 兼容支付宝 2.0 构建\n            const slot = this.componentsAlias.slot;\n            const slotAlias = slot._num;\n            const slotNamePropAlias = slot.name;\n            return `<view a:if=\"{{item.nn==='${slotAlias}'}}\" slot=\"{{item.${slotNamePropAlias}}}\" id=\"{{item.uid||item.sid}}\" data-sid=\"{{item.sid}}\">\n        <block a:for=\"{{item.cn}}\" a:key=\"sid\">\n          <template is=\"{{xs.e(0)}}\" data=\"{{i:item}}\" />\n        </block>\n      </view>\n      <template a:else is=\"{{xs.e(0)}}\" data=\"{{i:item}}\" />`;\n        };\n    }\n    buildXsTemplate() {\n        return '<import-sjs name=\"xs\" from=\"./utils.sjs\" />';\n    }\n    replacePropName(name, value, compName, componentAlias) {\n        if (value === 'eh')\n            return name.replace('bind', 'on');\n        if (compName === 'map') {\n            const polygonsAlias = componentAlias.polygons;\n            if (value.includes(polygonsAlias)) {\n                name = 'polygon';\n            }\n        }\n        return name;\n    }\n    getEvents() {\n        return {\n            onTap: 'eh',\n            onTouchMove: 'eh',\n            onTouchEnd: 'eh',\n            onTouchCancel: 'eh',\n            onLongTap: 'eh'\n        };\n    }\n    buildThirdPartyAttr(attrs) {\n        return [...attrs].reduce((str, attr) => {\n            if (attr.startsWith('@')) {\n                return str + `on${shared.capitalize(attr.slice(1))}=\"eh\" `;\n            }\n            else if (attr.startsWith('bind')) {\n                return str + `${attr}=\"eh\" `;\n            }\n            else if (attr.startsWith('on')) {\n                return str + `${attr}=\"eh\" `;\n            }\n            return str + `${attr}=\"{{ i.${shared.toCamelCase(attr)} }}\" `;\n        }, '');\n    }\n    createMiniComponents(components) {\n        const result = super.createMiniComponents(components);\n        // 兼容支付宝 2.0 构建\n        delete result.slot;\n        delete result['slot-view'];\n        delete result['native-slot'];\n        return result;\n    }\n    buildXSTmpExtra() {\n        const swiperItemAlias = this.componentsAlias['swiper-item']._num;\n        return `f: function (l) {\n    return l.filter(function (i) {return i.nn === '${swiperItemAlias}'})\n  }`;\n    }\n}\n\nconst PACKAGE_NAME = '@tarojs/plugin-platform-alipay';\nclass Alipay extends service.TaroPlatformBase {\n    /**\n     * 1. setupTransaction - init\n     * 2. setup\n     * 3. setupTransaction - close\n     * 4. buildTransaction - init\n     * 5. build\n     * 6. buildTransaction - close\n     */\n    constructor(ctx, config) {\n        super(ctx, config);\n        this.platform = 'alipay';\n        this.globalObject = 'my';\n        this.runtimePath = `${PACKAGE_NAME}/dist/runtime`;\n        this.taroComponentsPath = `${PACKAGE_NAME}/dist/components-react`;\n        this.fileType = {\n            templ: '.axml',\n            style: '.acss',\n            config: '.json',\n            script: '.js',\n            xs: '.sjs'\n        };\n        this.template = new Template();\n        this.setupTransaction.addWrapper({\n            close() {\n                this.modifyMiniConfigs();\n                this.modifyComponents();\n                this.modifyWebpackConfig();\n                this.generateProjectConfig('project.alipay.json', 'mini.project.json');\n            }\n        });\n    }\n    /**\n     * 转换用户编写的配置（微信小程序标准）为支付宝小程序标准\n     */\n    modifyMiniConfigs() {\n        this.ctx.modifyMiniConfigs(({ configMap }) => {\n            const replaceKeyMap = {\n                color: 'textColor',\n                custom: 'customize',\n                enablePullDownRefresh: 'pullRefresh',\n                iconPath: 'icon',\n                list: 'items',\n                navigationBarTitleText: 'defaultTitle',\n                navigationBarBackgroundColor: 'titleBarColor',\n                selectedIconPath: 'activeIcon',\n                subpackages: 'subPackages',\n                text: 'name'\n            };\n            Object.keys(configMap).forEach(key => {\n                const item = configMap[key];\n                if (item.content) {\n                    this.recursiveReplaceObjectKeys(item.content, replaceKeyMap);\n                }\n            });\n        });\n    }\n    /**\n     * 增加组件或修改组件属性\n     */\n    modifyComponents() {\n        const { internalComponents } = this.template;\n        this.template.mergeComponents(this.ctx, components);\n        this.modifySlider(internalComponents.Slider);\n        this.modifySwiper(internalComponents.Swiper);\n    }\n    /**\n     * 修改 Slider 组件属性\n     */\n    modifySlider(slider) {\n        delete slider['block-size'];\n        delete slider['block-color'];\n    }\n    /**\n     * 修改 Swiper 组件属性\n     */\n    modifySwiper(swiper) {\n        delete swiper.bindAnimationFinish;\n    }\n    /**\n     * 修改 Webpack 配置\n     */\n    modifyWebpackConfig() {\n        this.ctx.modifyWebpackChain(({ chain }) => {\n            // 支付宝系小程序全局就有 navigator 对象，不需要模拟\n            chain.plugin('providerPlugin')\n                .tap(args => {\n                const newArgs = Object.assign({}, args[0]);\n                delete newArgs.navigator;\n                return [newArgs];\n            });\n            const { compiler, framework } = this.ctx.initialConfig;\n            if (framework === 'react' &&\n                compiler &&\n                (compiler === 'webpack4' ||\n                    typeof compiler === 'object' && compiler.type === 'webpack4')) {\n                chain.node.set('setImmediate', false);\n            }\n        });\n    }\n}\n\nlet registeredModifyPageTemplate = false;\nvar index = (ctx) => {\n    ctx.registerPlatform({\n        name: 'alipay',\n        useConfigName: 'mini',\n        fn({ config }) {\n            return __awaiter(this, void 0, void 0, function* () {\n                !registeredModifyPageTemplate && modifyPageTemplate(ctx);\n                const program = new Alipay(ctx, config);\n                yield program.start();\n            });\n        }\n    });\n    ctx.modifyRunnerOpts(({ opts }) => {\n        if (!(opts === null || opts === void 0 ? void 0 : opts.compiler))\n            return;\n        if (shared.isString(opts.compiler)) {\n            opts.compiler = {\n                type: opts.compiler\n            };\n        }\n        const { compiler } = opts;\n        if (compiler.type === 'webpack5') {\n            compiler.prebundle || (compiler.prebundle = {});\n            const prebundleOptions = compiler.prebundle;\n            if (prebundleOptions.enable === false)\n                return;\n            prebundleOptions.swc || (prebundleOptions.swc = {\n                jsc: {\n                    target: 'es5'\n                }\n            });\n            prebundleOptions.exclude || (prebundleOptions.exclude = []);\n            prebundleOptions.exclude.push('@tarojs/plugin-platform-alipay/dist/runtime');\n            prebundleOptions.include || (prebundleOptions.include = []);\n            prebundleOptions.include.push('@tarojs/shared');\n        }\n    });\n};\nfunction getIsBuildPluginPath(filePath, isBuildPlugin) {\n    return isBuildPlugin ? `plugin/${filePath}` : filePath;\n}\n// 支付宝小程序中，如果某个页面依赖了原生小程序组件，\n// 那么这个页面不能使用公共模板 base.axml，\n// 而需要把公共模板的内容在此页面的模板中复制一份, 。\nfunction modifyPageTemplate(ctx) {\n    registeredModifyPageTemplate = true;\n    ctx.modifyBuildAssets(({ assets, miniPlugin }) => {\n        const pages = [];\n        // 筛选出使用了自定义组件的页面\n        miniPlugin.pages.forEach(page => {\n            const config = miniPlugin.filesConfig[miniPlugin.getConfigFilePath(page.name)].content;\n            if (!page.isNative && (config === null || config === void 0 ? void 0 : config.hasOwnProperty('usingComponents')) && Object.keys(config.usingComponents).length) {\n                pages.push(page.name);\n            }\n        });\n        if (!pages.length)\n            return;\n        const baseXml = assets[getIsBuildPluginPath('base.axml', miniPlugin.options.isBuildPlugin)].source();\n        pages.forEach(page => {\n            const templateName = `${page}.axml`;\n            const assetsItem = assets[templateName];\n            const src = assetsItem._value ? assetsItem._value.toString() : assetsItem.source();\n            let relativePath;\n            const templateCaller = src.replace(/<import src=\"(.*)base\\.axml\"\\/>/, function (_, $1) {\n                relativePath = $1;\n                return '';\n            });\n            const main = baseXml.replace(/<import-sjs name=\"xs\" from=\"(.*)utils.sjs\" \\/>/, function () {\n                return `<import-sjs name=\"xs\" from=\"${relativePath}utils.sjs\" />`;\n            });\n            const res = `${templateCaller}\n${main}`;\n            assets[templateName] = {\n                size: () => res.length,\n                source: () => res\n            };\n        });\n        if (miniPlugin.options.isBuildPlugin) {\n            const miniProjectJSONStr = JSON.stringify({\n                miniprogramRoot: 'miniprogram',\n                pluginRoot: 'plugin',\n                compileType: 'plugin'\n            }, null, 2);\n            assets['mini.project.json'] = {\n                size: () => miniProjectJSONStr.length,\n                source: () => miniProjectJSONStr\n            };\n            const pluginJSON = JSON.parse(assets['/plugin/plugin.json'].source());\n            pluginJSON.publicPages = pluginJSON.pages;\n            pluginJSON.pages = Object.values(pluginJSON.publicPages);\n            const pluginJSONStr = JSON.stringify(pluginJSON, null, 2);\n            assets['/plugin/plugin.json'] = {\n                size: () => pluginJSONStr.length,\n                source: () => pluginJSONStr\n            };\n        }\n    });\n}\n\nexports.Alipay = Alipay;\nexports[\"default\"] = index;\n//# sourceMappingURL=index.js.map\n"]}