{"version":3,"sources":["index.js","dist/index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["module.exports = require('./dist/index.js').default\n\nmodule.exports.default = module.exports\nmodule.exports.JD = require('./dist/index.js').JD\n","\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar shared = require('@tarojs/shared');\nvar service = require('@tarojs/service');\nvar template = require('@tarojs/shared/dist/template');\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nconst components = {\n    // ======== 调整属性 ========\n    Swiper: {\n        'easing-function': shared.singleQuote('default')\n    },\n    Canvas: {\n        type: ''\n    },\n    Button: {\n        bindGetPhoneNumber: ''\n    },\n    Map: {\n        bindRegionChange: ''\n    },\n    WebView: {\n        height: ''\n    }\n};\n\nclass Template extends template.UnRecursiveTemplate {\n    constructor() {\n        super(...arguments);\n        this.supportXS = false;\n        this.Adapter = {\n            if: 'jd:if',\n            else: 'jd:else',\n            elseif: 'jd:elif',\n            for: 'jd:for',\n            forItem: 'jd:for-item',\n            forIndex: 'jd:for-index',\n            key: 'jd:key',\n            type: 'jd'\n        };\n    }\n    replacePropName(name, value, componentName) {\n        if (value === 'eh') {\n            const nameLowerCase = name.toLowerCase();\n            if (nameLowerCase === 'bindlongtap' && componentName !== 'canvas')\n                return 'bindlongpress';\n            return nameLowerCase;\n        }\n        return name;\n    }\n}\n\nconst PACKAGE_NAME = '@tarojs/plugin-platform-jd';\nclass JD extends service.TaroPlatformBase {\n    /**\n     * 1. setupTransaction - init\n     * 2. setup\n     * 3. setupTransaction - close\n     * 4. buildTransaction - init\n     * 5. build\n     * 6. buildTransaction - close\n     */\n    constructor(ctx, config) {\n        super(ctx, config);\n        this.platform = 'jd';\n        this.globalObject = 'jd';\n        this.projectConfigJson = 'project.jd.json';\n        this.runtimePath = `${PACKAGE_NAME}/dist/runtime`;\n        this.fileType = {\n            templ: '.jxml',\n            style: '.jxss',\n            config: '.json',\n            script: '.js'\n        };\n        this.template = new Template();\n        this.setupTransaction.addWrapper({\n            close: this.modifyTemplate\n        });\n    }\n    /**\n     * 增加组件或修改组件属性\n     */\n    modifyTemplate() {\n        this.template.mergeComponents(this.ctx, components);\n    }\n}\n\nvar index = (ctx) => {\n    ctx.registerPlatform({\n        name: 'jd',\n        useConfigName: 'mini',\n        fn({ config }) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const program = new JD(ctx, config);\n                yield program.start();\n            });\n        }\n    });\n    ctx.modifyRunnerOpts(({ opts }) => {\n        if (!(opts === null || opts === void 0 ? void 0 : opts.compiler))\n            return;\n        if (shared.isString(opts.compiler)) {\n            opts.compiler = {\n                type: opts.compiler\n            };\n        }\n        const { compiler } = opts;\n        if (compiler.type === 'webpack5') {\n            compiler.prebundle || (compiler.prebundle = {});\n            const prebundleOptions = compiler.prebundle;\n            if (prebundleOptions.enable === false)\n                return;\n            prebundleOptions.swc || (prebundleOptions.swc = {\n                jsc: {\n                    target: 'es5'\n                }\n            });\n            prebundleOptions.exclude || (prebundleOptions.exclude = []);\n            prebundleOptions.include || (prebundleOptions.include = []);\n        }\n    });\n};\n\nexports.JD = JD;\nexports[\"default\"] = index;\n//# sourceMappingURL=index.js.map\n"]}